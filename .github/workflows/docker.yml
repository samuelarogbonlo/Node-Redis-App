name: Lifinance Docker Image

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push-docker-image:
    name: Build images and push to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ECR
        uses: docker/login-action@v3
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # This step yields the following labels
      # - date+sha, e.g. 2023-01-19-da4692d,
      # - tag (if pushed).
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: public.ecr.aws/e9f7q1d2/lifinance
          flavor: |
            latest=false
          tags: |
            type=raw,value={{date 'YYYY-MM-DD'}}-{{sha}}
            type=ref,event=tag
            type=edge

      - name: Build image and push to ECR
        uses: docker/build-push-action@v5
        with:
          context: ./node-app
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.ref == 'refs/heads/main' }}
          platforms: ${{ (github.ref == 'refs/heads/main') && 'linux/amd64,linux/arm64' || 'linux/arm64' }}

  deploy-to-ecs:
    name: Deploy to Amazon ECS
    runs-on: ubuntu-latest  
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: lifinance-node-app
          image: ${{ secrets.IMAGE_TAG }}:${{ github.sha }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: terraform/ecs/container-definition
          service: ${{secrets.ECS_SERVICE}}
          cluster: ${{secrets.ECS_CLUSTER}}
          wait-for-service-stability: true     
